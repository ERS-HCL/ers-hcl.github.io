{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Nxplorer Microservice Stater\",\n  \"date\": \"2018-11-04\",\n  \"author\": \"Tarun Sukhu <tsukhu@hcl.com>\",\n  \"tags\": \"nodejs,typescript,graphql,microservice\",\n  \"image\": \"/project/images/nxplorer.png\",\n  \"heroImage\": \"/images/showcase2.jpg\",\n  \"heroHeading\": \"This is the heading\",\n  \"heroSubHeading\": \"This is a sub heading\",\n  \"heroTextColor\": \"darkslategray\",\n  \"excerpt\": \"Cloud Native Node JS Express Reactive Microservice Starter Template (REST/GraphQL)\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"PROJECT NAME\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nxplorerjs-microservice-starter\")), mdx(\"h2\", null, \"OBJECTIVE\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloud Native Node JS Express Reactive Microservice Starter Template (REST/GraphQL)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"This project provides complete Node JS / Typescript based microservices template with all that will be needed features for production deployment , monitoring , debugging , logging , security , CI/CD.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reactive extensions based samples are added as well to demonstrate how this can be used for building a microservice API edge-service , a backend for frontend or use it as a base for building any kind of microservice.\")), mdx(\"h2\", null, \"Design Principles\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use best of breed modules to create a production ready microservice framework\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Based on the 12-factor app principles\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"No custom code or wrappers so that any developer can modify/replace any of the modules or implementation\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Design patterns for implementation that can be used as a reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modular , replacable and plug and play code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Provide a starter for both the business APIs and microservice platform development.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DevOps ready with code quality, unit & integration tests, deployment automated.\")), mdx(\"h2\", null, \"Features\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Node JS, Express, Typescript , Dependency Injection base\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Backpack (webpack) based - build , development , packaging\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Swagger Enabled - Express swagger middleware / Swagger UI integration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GraphQL based on Apollo Server 2.0 with JWT security , data loader and REST data source samples\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Support for GraphQL SDL via graphql-import\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GraphQL mock resolvers (optional) during development - graphql-tools\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"GraphQL based client wrapper APIs - graphql-request\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"REST APIs - using Inversify Controller\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Externalized Configuration - DotEnv (Settings, Env specific API URLs)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tests - Jest , SuperTest , GraphQL Tester. Infrastructure for automated unit and integration tests\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code Coverage - Istanbul\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Code Quality - tslint\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Container support - Docker , Kubernetes Clusters\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Helm Chart based deployment support\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prometheus integration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API Response Logging , Express Server Logging , UUID propogation - Pino\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Reactive Extensions support - RxJS6\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"CORS, JSONObject Limit , Helmet , CSRF - Express Security\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"IOC / Dependency Injection / Express Annotation based APIs - Inversify\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Documentation - TypeDocs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"API Exception Handling Utilities\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Standard HTTP Codes for cleaner code\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sample APIs, Patterns for reference\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Sonar Qube integration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hystrix Circuit Breaker Support (Using Brakes)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"JWT Based API Security - jsonwebtoken, express-jwt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Now using the super fast pino logger for all logging needs\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Additional performance time logging built in\")), mdx(\"h2\", null, \"PROJECT DETAILS\"), mdx(Image, {\n    imageName: \"express-microservice-starter\",\n    bypassImage: true,\n    mdxType: \"Image\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Project URL \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ERS-HCL/nxplorerjs-microservice-starter\"\n  }), \"https://github.com/ERS-HCL/nxplorerjs-microservice-starter\"))), mdx(\"h2\", null, \"CONTRIBUTOR(S)\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tarun Kumar Sukhu\")));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Nxplorer Microservice Stater","author":"Tarun Sukhu <tsukhu@hcl.com>","heroImage":"/images/showcase2.jpg","heroHeading":"This is the heading","heroSubHeading":"This is a sub heading","heroTextColor":"darkslategray"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/nxplorerjs/"}}