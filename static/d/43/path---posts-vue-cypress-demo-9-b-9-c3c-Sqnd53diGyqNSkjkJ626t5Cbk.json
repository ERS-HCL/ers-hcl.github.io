{"data":{"mdx":{"code":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Cypress Integration with Vue app\",\n  \"date\": \"2018-11-19\",\n  \"author\": \"Tarun Sukhu <tsukhu@hcl.com>\",\n  \"tags\": \"vuex,cypress, integration test\",\n  \"image\": \"/project/images/Cypress_crud.gif\",\n  \"excerpt\": \"A reference implementation using Vue and Vuex. It demonstrates the integration with cypress.io for integration testing\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", null, \"OBJECTIVE\"), mdx(\"p\", null, \"This is a sample app based on learning from various sources on Vue + VueX + REST APIs.\\nThere are two demos available\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Simple Crud - Basic CRUD operation using VueX 3) Books and Recommendations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Modified version of the post by \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.raymondcamden.com/2018/01/05/another-example-of-vuejs-and-vuex-an-api-wrapper\"\n  }), \"Raymond Camden\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Upgraded to use the newer techniques of using Vuex 3\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Error handling\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usage of unfetch\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add skeleton ui to improve user perceived performance\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cypress.io Integration and IDE configuration for intellisense\")))), mdx(\"h2\", null, \"PROJECT DETAILS\"), mdx(Image, {\n    imageName: \"Cypress_crud\",\n    mdxType: \"Image\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Project URL \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ERS-HCL/vuex-state-app\"\n  }), \"https://github.com/ERS-HCL/vuex-state-app\"))), mdx(\"h2\", null, \"CONTRIBUTOR(S)\"), mdx(\"p\", null, \"Tarun Sukhu\"));\n}\nMDXContent.isMDXComponent = true;"},"frontmatter":{"title":"Cypress Integration with Vue app","author":"Tarun Sukhu <tsukhu@hcl.com>"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/posts/vue-cypress-demo/"}}